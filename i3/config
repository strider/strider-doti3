# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout somewhen, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

set $display0 "eDP1"
set $display1 "HDMI1"
set $display2 "DP2-2"

# chose a FreeType font, such as:
font pango:Terminus for Powerline 08

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
#bindsym $mod+Return exec i3-sensible-terminal
bindsym $mod+Return exec urxvt256c-ml
# start a filemanager
bindsym $mod+Shift+Return exec --no-startup-id nautilus

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
bindsym $mod+space exec "~/bin/rofi -show run -o 85 -theme ~/.i3/sidebar.rasi"
bindsym $mod+Shift+d exec "~/bin/rofi -show ssh -o 85"
bindsym $mod+Shift+p exec passmenu
bindsym $mod+Shift+a exec "rofi -combi-modi window,drun -show combi -modi combi"

bindsym $mod+d workspace 4; exec "urxvt256c-ml --title 'DEVEL' -e zsh -c '/usr/bin/mux DEVEL'"
bindsym $mod+shift+m workspace 5;  exec "urxvt256c-ml --title 'RedHat' -e zsh -c '/usr/bin/mux RedHat'"

# mpdmenu (https://github.com/k00mi/mpdmenu)
# A small bash script for controlling MPD through dmenu.
#bindsym $mod+Shift+m exec --no-startup-id ~/bin/mpdmenu.sh

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

hide_edge_borders both
new_window pixel 2
new_float pixel 2
bindsym $mod+t border normal
bindsym $mod+y border pixel 2
bindsym $mod+u border none

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+H move left
bindsym $mod+Shift+J move down
bindsym $mod+Shift+K move up
bindsym $mod+Shift+L move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+Control+h split h
# split in vertical orientation
bindsym $mod+Control+v split v

# split orientation
bindsym $mod+v layout toggle split

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+Shift+Tab focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

bindsym $mod+p bar mode toggle
#bindsym $mod+Shift+l bar mode dock
bindsym $mod+z workspace prev
bindsym $mod+x workspace next
bindsym $mod+c workspace back_and_forth

# Take a Screenshot using scrot.
bindsym Print exec "scrot '%Y%m%d-%H%M%S_$wx$h.png' -e 'mv $f ~/shots/'"
bindsym $mod+Shift+x exec urxvt256c-ml -title "Ranger" -e zsh -c "~/.local/bin/ranger ~/"
bindsym $mod+Shift+u exec urxvt256c-ml -title "DNF Upgrade!!!" -e zsh -c "sudo dnf upgrade && sleep 20"
bindsym $mod+Control+k exec urxvt256c-ml -title "Get Kerberos Ticket" -e zsh -c "kinit && sleep 5"

# focus the child container
#bindsym $mod+d focus child

workspace_auto_back_and_forth yes
focus_follows_mouse no

# switch to workspace
bindsym $mod+1 workspace 1
bindsym $mod+2 workspace 2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10
bindsym $mod+Control+1 workspace 11
bindsym $mod+Control+2 workspace 12
bindsym $mod+Control+3 workspace 13
bindsym $mod+Control+4 workspace 14
bindsym $mod+Control+5 workspace 15

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace 1
bindsym $mod+Shift+2 move container to workspace 2
bindsym $mod+Shift+3 move container to workspace 3
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10
bindsym $mod+Shift+Control+1 move container to workspace 11
bindsym $mod+Shift+Control+2 move container to workspace 12
bindsym $mod+Shift+Control+3 move container to workspace 13
bindsym $mod+Shift+Control+4 move container to workspace 14
bindsym $mod+Shift+Control+5 move container to workspace 15

bindsym $mod+F1 focus output $display0
bindsym $mod+F2 focus output $display1
bindsym $mod+F3 focus output $display2

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# screen locker (first move to "safe" workspace without any chat app)
bindsym Control+$mod+l exec i3-msg workspace 1 && i3lock -c 000000

# pulse audio volume control
#bindsym XF86AudioRaiseVolume exec "amixer -D pulse sset Master '5%+'"
#bindsym XF86AudioLowerVolume exec "amixer -D pulse sset Master '5%-'"
#bindsym XF86AudioMute exec "amixer -D pulse set Master toggle"
bindsym XF86AudioLowerVolume exec /usr/bin/pactl set-sink-volume 1 -5%; exec /usr/bin/killall -USR1 i3status
bindsym XF86AudioRaiseVolume exec /usr/bin/pactl set-sink-volume 1 +5%; exec /usr/bin/killall -USR1 i3status
bindsym XF86AudioMute exec /usr/bin/pactl set-sink-mute 1 toggle; exec /usr/bin/killall -USR1 i3status
bindsym XF86MonBrightnessUp exec /usr/bin/xbacklight -inc 10
bindsym XF86MonBrightnessDown exec /usr/bin/xbacklight -dec 5
bindsym $mod+F4 exec --no-startup-id $HOME/bin/mutemic.sh


# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 1 px or 1 ppt
        bindsym k resize grow height 1 px or 1 ppt
        bindsym l resize shrink height 1 px or 1 ppt
        bindsym semicolon resize grow width 1 px or 1 ppt

        # same bindings, but for the arrow keyR
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

# Create Log out, Reboot, Poweroff bindings
set $screen_setup SCREEN (l) Laptop Only, (h) Home Office
mode "$screen_setup" {
    bindsym l exec --no-startup-id $HOME/.screenlayout/laptop.sh, mode "default"
    bindsym h exec --no-startup-id $HOME/.screenlayout/home.sh, mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+Shift+S mode "$screen_setup"
bindsym $mod+F9 exec --no-startup-id $HOME/.screenlayout/laptop.sh

bindsym $mod+r mode "resize"

bindsym $mod+i exec i3-input -F 'rename workspace to %s' -P 'New name: '
bindsym $mod+Shift+o exec i3-input -F 'move container to workspace "%s"' -P 'move this window to workspace #: '

# turn off the screen
bindsym $mod+shift+z exec "sleep 2; xset dpms force off"

# Create Log out, Reboot, Poweroff bindings
set $mode_system System (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (Shift+h) hybrid, (Shift+s) shutdown
mode "$mode_system" {
    bindsym l exec --no-startup-id $HOME/.i3/./i3exit lock, mode "default"
    bindsym e exec --no-startup-id $HOME/.i3/./i3exit logout, mode "default"
    bindsym s exec --no-startup-id $HOME/.i3/./i3exit suspend, mode "default"
    bindsym h exec --no-startup-id $HOME/.i3/./i3exit hibernate, mode "default"
    bindsym r exec --no-startup-id $HOME/.i3/./i3exit reboot, mode "default"
    bindsym Shift+h exec --no-startup-id $HOME/.i3/./i3exit hybrid, mode "default"
    bindsym Shift+s exec --no-startup-id $HOME/.i3/./i3exit shutdown, mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+Shift+T mode "$mode_system"

# oldschool theme
set $black		#000000
set $blue		        #0000FF
set $grey	 	        #373B41
set $yellow		#FFFF00
set $red		        #FF0000
set $green		#00FF00
set $lightwhite		#C5C8C6
set $lightblack		#232B2B
set $lightgrey		#707880

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
  output eDP1
  position top
  font pango:FontAwesome 8, Terminus for Powerline 08
  status_command ~/.i3/conky.sh
  tray_output eDP1
  mode dock
  workspace_buttons yes
  colors {
	# Whole color settings
	background   $lightblack
	statusline   $green
	separator    $grey

	# type			border       backgr.      text
	focused_workspace	$green   $green       $black
	active_workspace	$grey    $grey        $lightgrey
	inactive_workspace	$grey    $grey        $lightgrey
	urgent_workspace	$red     $red         $lightwhite
  }
}

bar {
  output HDMI1
  output DP2-2
  tray_output none
  position top
  colors {
	# Whole color settings
	background   $lightblack
	statusline   $green
	separator    $grey

	# type			border       backgr.      text
	focused_workspace	$green   $green       $black
	active_workspace	$grey    $grey        $lightgrey
	inactive_workspace	$grey    $grey        $lightgrey
	urgent_workspace	$red     $red         $lightwhite
  }
}

# Workspaces
workspace 1 output $display0
workspace 2 output $display1
workspace 3 output $display1
workspace 4 output $display1
workspace 5 output $display1
workspace 6 output $display1
workspace 7 output $display2
workspace 8 output $display2
workspace 9 output $display2
workspace 10 output $display2
workspace 11 output $display2
workspace 12 output $display2
workspace 13 output $display2
workspace 14 output $display2
workspace 15 output $display2

# scratchpad
bindsym $mod+m move scratchpad
bindsym $mod+o scratchpad show

## Make the currently focused window a scratchpad
#bindsym $mod+Shift+minus move scratchpad
## Show the first scratchpad window
#bindsym $mod+minus scratchpad show

# workspace assignment (use "xprop")
assign [class="^Firefox$"] 2
assign [class="^Nautilus$"] 3
#assign [class="^Evince$"] 3
#assign [class="^Zathura$"] 3
assign [class="^Stardict$"] 8

# custom window settings
for_window [class="^.*"] border none
for_window [window_role="pop-up"] floating enable; border normal
for_window [window_role="task_dialog"] floating enable; border normal
for_window [window_role="bubble"] floating enable; border normal
for_window [window_role="Preferences"] floating enable; border normal
for_window [class="google-chrome"] border none
for_window [class="Firefox"] border none
for_window [class="Gvim"] floating enable; border pixel 1
for_window [class="Nautilus"] border none
for_window [class="Nemo"] border none
for_window [class="Virt-manager"] floating enable; border none
for_window [title="- Shutter"] floating enable; border normal
for_window [title="DNF Upgrade!!!"] floating enable; border pixel 1
for_window [title="Get Kerberos Ticket"] floating enable; border pixel 1
for_window [class="^Vlc$"] floating enable
for_window [instance="gimp"] floating enable
for_window [class="Gnome-disks"] floating enable
for_window [class="Linphone"] floating enable
for_window [class="Zathura"] border none
for_window [class="URxvt"] border pixel 1

for_window [class="(?i)pavucontrol"] floating enable, move position mouse

bindsym $mod+F5 [class="Firefox"] move workspace current

# start the session
exec --no-startup-id xrdb -merge ~/.Xresources &
exec --no-startup-id xset -b &
exec --no-startup-id xset dpms 600 1200 2000 &
exec --no-startup-id setxkbmap -layout us -variant altgr-intl -option grp:shift_shift_toggle &
exec --no-startup-id xbacklight -set 100 &
exec --no-startup-id pactl set-sink-volume alsa_output.pci-0000_00_1b.0.analog-stereo '60%' &
exec pgrep urxvt256c-ml || urxvt256c-mld -q -f -o
exec /usr/bin/dunst
exec clipit
#exec --no-startup-id /usr/bin/mpd
#exec --no-startup-id /usr/bin/linphone --iconified
exec --no-startup-id /usr/bin/redshift-gtk
exec --no-startup-id ~/.local/bin/devpi-server --start
exec dropbox start
exec --no-startup-id /usr/bin/udiskie -ant &
exec pulseaudio --start
exec --no-startup-id /usr/bin/pasystray
exec_always feh --bg-fill '/home/gchamoul/Pictures/9C48gT1.jpg'
exec /usr/bin/xautolock -time 5 \
   -locker "i3lock -c 000000" \
   -notify 30 \
   -notifier "notify-send -u critical -t 10000 -- 'LOCKING screen in 30 seconds'" &

#exec /usr/libexec/cinnamon-settings-daemon &
exec /usr/libexec/gnome-settings-daemon &
exec /usr/libexec/polkit-gnome-authentication-agent-1 &
exec nm-applet
exec seapplet
exec --no-startup-id ~/.i3/autostart

# Client color settings
#class				border		backgr.		text		        split
client.focused			$green		$green		$black	        $green
client.focused_inactive	$grey		$grey		$lightgrey	        $grey
client.unfocused		$grey		$grey		$lightgrey	        $grey
client.urgent			$red		        $red		        $lightwhite	$red
client.background		$black
