#!/bin/sh

# Wait for program coming up
wait_for_program () {
  n=0
  while true
  do
    # PID of last background command
    if xdotool search --onlyvisible --pid $! 2>/dev/null; then
      break
    else
      if [ $n -eq 200 ]; then
        notify-send -u critical "Error during start: last program $! did not started fast enough"
        break
      else
        n=`expr $n + 1`
        sleep 0.1
      fi
    fi
  done
}

# Terminal
TERMINAL=urxvt256c-ml

## Determine connected monitors
HDMI_YES=0
DP_YES=0
ANY_YES=0
xrandr | grep -Eq "DP-[12345]-[12345] connected" && DP_YES=1 && ANY_YES=1
xrandr | grep -Eq "HDMI-[12345] connected" && HDMI_YES=1 && ANY_YES=1
DP=$(xrandr | grep -E "DP-[12345]-[12345] connected" | grep -oE "DP-[12345]-[12345]")
HDMI=$(xrandr | grep -E "HDMI-[12345] connected" | grep -oE "HDMI-[12345]")

#pointer_control disable

if [ "$HDMI_YES" -eq 1 ] && [ "$DP_YES" -eq 1 ]; then
    sh $HOME/.screenlayout/home.sh
else
    sh $HOME/.screenlayout/laptop.sh
fi

i3-msg workspace 1
$TERMINAL &
wait_for_program
sleep 5

pulseaudio --kill
wait_for_program
pulseaudio --start
wait_for_program

#pointer_control enable
xrefresh &

# Update dmenu cache
dmenu_path >/dev/null &

exit 0
